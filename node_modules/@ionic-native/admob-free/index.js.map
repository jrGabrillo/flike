{"version":3,"sources":["../../../src/@ionic-native/plugins/admob-free/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/fromEvent';\r\n\r\nexport interface AdMobFreeBannerConfig {\r\n  /**\r\n   * Ad Unit ID\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Receiving test ad\r\n   */\r\n  isTesting?: boolean;\r\n  /**\r\n   * Auto show ad when loaded\r\n   */\r\n  autoShow?: boolean;\r\n  /**\r\n   * Set to true, to put banner at top\r\n   */\r\n  bannerAtTop?: boolean;\r\n  /**\r\n   * Set to true, to allow banner overlap WebView\r\n   */\r\n  overlap?: boolean;\r\n  /**\r\n   * Set to true to avoid ios7 status bar overlap\r\n   */\r\n  offsetTopBar?: boolean;\r\n  /**\r\n   * Banner  size\r\n   */\r\n  size?: string;\r\n}\r\n\r\nexport interface AdMobFreeInterstitialConfig {\r\n  /**\r\n   * Ad Unit ID\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Receiving test ad\r\n   */\r\n  isTesting?: boolean;\r\n  /**\r\n   * Auto show ad when loaded\r\n   */\r\n  autoShow?: boolean;\r\n}\r\n\r\nexport interface AdMobFreeRewardVideoConfig {\r\n  /**\r\n   * Ad Unit ID\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Receiving test ad\r\n   */\r\n  isTesting?: boolean;\r\n  /**\r\n   * Auto show ad when loaded\r\n   */\r\n  autoShow?: boolean;\r\n}\r\n\r\n/**\r\n * @name AdMob Free\r\n * @description\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { AdMobFree, AdMobFreeBannerConfig } from '@ionic-native/admob-free';\r\n *\r\n *\r\n * constructor(private admobFree: AdMobFree) { }\r\n *\r\n *\r\n * ...\r\n *\r\n *\r\n * const bannerConfig: AdMobFreeBannerConfig = {\r\n *  // add your config here\r\n *  // for the sake of this example we will just use the test config\r\n *  isTesting: true,\r\n *  autoShow: true\r\n * };\r\n * this.admobFree.banner.config(bannerConfig);\r\n *\r\n * this.admobFree.banner.prepare()\r\n *   .then(() => {\r\n *     // banner Ad is ready\r\n *     // if we set autoShow to false, then we will need to call the show method here\r\n *   })\r\n *   .catch(e => console.log(e));\r\n *\r\n *\r\n * ```\r\n * @interfaces\r\n * AdMobFreeBannerConfig\r\n * AdMobFreeInterstitialConfig\r\n * AdMobFreeRewardVideoConfig\r\n * @classes\r\n * AdMobFreeBanner\r\n * AdMobFreeInterstitial\r\n * AdMobFreeRewardVideo\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob',\r\n  repo: 'https://github.com/ratson/cordova-plugin-admob-free',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class AdMobFree extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Convenience object to get event names\r\n   * @type {Object}\r\n   */\r\n  events: any = {\r\n    BANNER_LOAD: 'admob.banner.events.LOAD',\r\n    BANNER_LOAD_FAIL: 'admob.banner.events.LOAD_FAIL',\r\n    BANNER_OPEN: 'admob.banner.events.OPEN',\r\n    BANNER_CLOSE: 'admob.banner.events.CLOSE',\r\n    BANNER_EXIT_APP: 'admob.banner.events.EXIT_APP',\r\n\r\n    INTERSTITIAL_LOAD: 'admob.interstitial.events.LOAD',\r\n    INTERSTITIAL_LOAD_FAIL: 'admob.interstitial.events.LOAD_FAIL',\r\n    INTERSTITIAL_OPEN: 'admob.interstitial.events.OPEN',\r\n    INTERSTITIAL_CLOSE: 'admob.interstitial.events.CLOSE',\r\n    INTERSTITIAL_EXIT_APP: 'admob.interstitial.events.EXIT_APP',\r\n\r\n    REWARD_VIDEO_LOAD: 'admob.rewardvideo.events.LOAD',\r\n    REWARD_VIDEO_LOAD_FAIL: 'admob.rewardvideo.events.LOAD_FAIL',\r\n    REWARD_VIDEO_OPEN: 'admob.rewardvideo.events.OPEN',\r\n    REWARD_VIDEO_CLOSE: 'admob.rewardvideo.events.CLOSE',\r\n    REWARD_VIDEO_EXIT_APP: 'admob.rewardvideo.events.EXIT_APP',\r\n    REWARD_VIDEO_START: 'admob.rewardvideo.events.START',\r\n    REWARD_VIDEO_REWARD: 'admob.rewardvideo.events.REWARD'\r\n  };\r\n\r\n  /**\r\n   * Watch an event\r\n   * @param event {string} event name\r\n   * @return {Observable<any>}\r\n   */\r\n  on(event: string): Observable<any> {\r\n    return Observable.fromEvent(document, event);\r\n  }\r\n\r\n  /**\r\n   * Returns the AdMobFreeBanner object\r\n   * @type {AdMobFreeBanner}\r\n   */\r\n  banner: AdMobFreeBanner = new AdMobFreeBanner();\r\n\r\n  /**\r\n   * Returns the AdMobFreeInterstitial object\r\n   * @type {AdMobFreeInterstitial}\r\n   */\r\n  interstitial: AdMobFreeInterstitial = new AdMobFreeInterstitial();\r\n\r\n  /**\r\n   * Returns the AdMobFreeRewardVideo object\r\n   * @type {AdMobFreeRewardVideo}\r\n   */\r\n  rewardVideo: AdMobFreeRewardVideo = new AdMobFreeRewardVideo();\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob.banner',\r\n})\r\nexport class AdMobFreeBanner {\r\n\r\n  /**\r\n   * Update config.\r\n   * @param options\r\n   * @return {AdMobFreeBannerConfig}\r\n   */\r\n  @Cordova({ sync: true })\r\n  config(options: AdMobFreeBannerConfig): AdMobFreeBannerConfig { return; }\r\n\r\n  /**\r\n   * Hide the banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  hide(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Create banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  prepare(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Remove the banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  remove(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show the banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  show(): Promise<any> { return; }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob.interstitial',\r\n})\r\nexport class AdMobFreeInterstitial {\r\n\r\n  /**\r\n   * Update config.\r\n   * @param options\r\n   * @return {AdMobFreeInterstitialConfig}\r\n   */\r\n  @Cordova({ sync: true })\r\n  config(options: AdMobFreeInterstitialConfig): AdMobFreeInterstitialConfig { return; }\r\n\r\n  /**\r\n   * Check if interstitial is ready\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  isReady(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Prepare interstitial\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  prepare(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show the interstitial\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  show(): Promise<any> { return; }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob.rewardvideo',\r\n})\r\nexport class AdMobFreeRewardVideo {\r\n\r\n  /**\r\n   * Update config.\r\n   * @param options\r\n   * @return {AdMobFreeRewardVideoConfig}\r\n   */\r\n  @Cordova({ sync: true })\r\n  config(options: AdMobFreeRewardVideoConfig): AdMobFreeRewardVideoConfig { return; }\r\n\r\n  /**\r\n   * Check if reward video is ready\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  isReady(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Prepare reward video\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  prepare(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show the reward video\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  show(): Promise<any> { return; }\r\n\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}