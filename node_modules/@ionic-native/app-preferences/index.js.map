{"version":3,"sources":["../../../src/@ionic-native/plugins/app-preferences/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * @name App Preferences\r\n * @description\r\n * This plugin allows you to read and write app preferences\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { AppPreferences } from '@ionic-native/app-preferences';\r\n *\r\n * constructor(private appPreferences: AppPreferences) { }\r\n *\r\n * ...\r\n *\r\n * this.appPreferences.fetch('key').then((res) => { console.log(res); });\r\n *\r\n * ```\r\n *\r\n */\r\n@Plugin({\r\n  pluginName: 'AppPreferences',\r\n  plugin: 'cordova-plugin-app-preferences',\r\n  pluginRef: 'plugins.appPreferences',\r\n  repo: 'https://github.com/apla/me.apla.cordova.app-preferences',\r\n  platforms: ['Android', 'BlackBerry 10', 'Browser', 'iOS', 'macOS', 'Windows 8', 'Windows Phone']\r\n})\r\n\r\nexport class AppPreferences extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Get a preference value\r\n   *\r\n   * @param {string} dict Dictionary for key (OPTIONAL)\r\n   * @param {string} key Key\r\n   * @return {Promise<any>} Returns a promise\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  fetch(dict: string, key?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Set a preference value\r\n   *\r\n   * @param {string} dict Dictionary for key (OPTIONAL)\r\n   * @param {string} key Key\r\n   * @param {any} value Value\r\n   * @return {Promise<any>} Returns a promise\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  store(dict: string, key: string, value?: any): Promise<any> {\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Remove value from preferences\r\n   *\r\n   * @param {string} dict Dictionary for key (OPTIONAL)\r\n   * @param {string} key Key\r\n   * @return {Promise<any>} Returns a promise\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  remove(dict: string, key?: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Clear preferences\r\n   *\r\n   * @return {Promise<any>} Returns a promise\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  clearAll(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show native preferences interface\r\n   *\r\n   * @return {Promise<any>} Returns a promise\r\n   */\r\n  @Cordova({\r\n    callbackOrder: 'reverse'\r\n  })\r\n  show(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show native preferences interface\r\n   *\r\n   * @param {boolean} subscribe true value to subscribe, false - unsubscribe\r\n   * @return {Observable<any>} Returns an observable\r\n   */\r\n  @Cordova({\r\n    observable: true\r\n  })\r\n  watch(subscribe: boolean): Observable<any> { return; }\r\n\r\n  /**\r\n   * Return named configuration context\r\n   * In iOS you'll get a suite configuration, on Android â€” named file\r\n   * Supports: Android, iOS\r\n   * @param {string} suiteName suite name\r\n   * @returns {Object} Custom object, bound to that suite\r\n   */\r\n  @Cordova({\r\n    platforms: ['Android'],\r\n    sync: true\r\n  })\r\n  suite(suiteName: string): any { return; }\r\n\r\n  @Cordova({\r\n    platforms: ['iOS'],\r\n    sync: true\r\n  })\r\n  iosSuite(suiteName: string): any { return; }\r\n\r\n  /**\r\n   * Return cloud synchronized configuration context\r\n   * Currently supports Windows and iOS/macOS\r\n   * @returns {Object} Custom object, bound to that suite\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS', 'Windows', 'Windows Phone 8']\r\n  })\r\n  cloudSync(): Object { return; }\r\n\r\n  /**\r\n   * Return default configuration context\r\n   * Currently supports Windows and iOS/macOS\r\n   * @returns {Object} Custom Object, bound to that suite\r\n   */\r\n  @Cordova({\r\n    platforms: ['iOS', 'Windows', 'Windows Phone 8']\r\n  })\r\n  defaults(): Object { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}