{"version":3,"sources":["../../src/pages/all/all.module.ts","../../src/pages/all/all.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {AllPage} from './all';\n\n@NgModule({\n  declarations: [\n    AllPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AllPage),\n  ],\n    exports:[\n        AllPage\n    ]\n})\nexport class AllPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/all/all.module.ts","import {Component} from '@angular/core';\nimport {AlertController, App, IonicPage, LoadingController, NavController} from 'ionic-angular';\nimport {AppPreferences} from \"@ionic-native/app-preferences\";\nimport {ChatRoom} from \"../../models/chatroom.model\";\nimport {AngularFireDatabase} from \"angularfire2/database\";\nimport * as globals from '../../providers/globals/globals';\nimport {FlikeUser} from \"../../models/flikeUser.model\";\nimport {VariablesProvider} from \"../../providers/variables/variables\";\nimport {ChatServiceProvider} from \"../../providers/chat-service/chat-service\";\nimport {TranslationsProvider} from \"../../providers/translations/translations\";\nimport {ErrorLogProvider} from \"../../providers/error-log/error-log\";\n\n\n@IonicPage()\n@Component({\n    selector: 'page-all',\n    templateUrl: 'all.html',\n})\nexport class AllPage {\n\n    user:FlikeUser;\n    chatRooms: Array<ChatRoom>;\n    globals: any = globals;\n    lastMessageTimestamp:number;\n\n\n    constructor(public navCtrl: NavController,\n                public prefs: AppPreferences,\n                public db: AngularFireDatabase,\n                public loader: LoadingController,\n                public app: App,\n                public variables: VariablesProvider,\n                public chatService: ChatServiceProvider,\n                public translate: TranslationsProvider,\n                public alert: AlertController,\n                private errorHandler: ErrorLogProvider\n    ) {\n        this.chatRooms = [];\n        this.user = this.variables.user;\n        if (!this.user) this.navCtrl.setRoot(\"ActivationPage\")\n    }\n\n\n    ionViewDidLoad() {\n\n        this.getChatrooms();\n    }\n\n    getChatrooms(){\n        let loader = this.loader.create({\n            spinner: \"bubbles\",\n            content:this.translate.getTranslation('loading')});\n        loader.present();\n        this.chatService.getChatroomByGroup(globals.groupAll,this.user.id)\n            .subscribe( rooms => {\n                rooms.map( chatroom => {\n                    //we are updating last viewed message here because of the reloading\n                    //of chatrooms when data changed\n                    //this.chatService.updateMsgView(chatroom.id,this.user.id);\n                    let room: ChatRoom = {\n                        id: chatroom.payload.key,\n                        name : chatroom.payload.val().name,\n                        chatroomImgUrl : chatroom.payload.val().chatroomImgUrl,\n                        indicator : chatroom.payload.val().indicator,\n                        //lastMessage : {},\n                        userAccess : [],\n                        userMessageTimestamps : []\n                    }\n\n                    this.chatService.getChatroomData(chatroom.payload.key)\n                        .subscribe( actionGetChatroomData => {\n                            let thisroom = actionGetChatroomData.payload.val()\n                            //joinning all the info in an object for the array\n                            room.lastMessage = chatroom.payload.val().lastMessage\n                            //room.lastMessage = thisroom.lastMessage || {lastMessage:\"\"};\n                            for (let key in thisroom.userAccess){\n                                //populate Array\n                                this.chatService.getUserInfoById(key)\n                                    .subscribe( actionGetUserInfo => {\n                                        let userInfo = actionGetUserInfo.payload.val()\n                                        userInfo.id = key;\n                                        if (!this.userExist(room.userAccess,userInfo.id)) {\n                                            room.userAccess.push(userInfo)\n                                        }\n                                    }, error => this.errorHandler.sendError(\"getChatrooms - getUserInfoById subscription\",error))\n                            }\n                            for (let key in thisroom.userMessageTimestamps){\n                                //save lastMessageTimestamp. If we got a 0 value we don't overwrite it anymore to keep\n                                //track of message not read (0 is de default value for a non read message)\n                                if (key != this.user.id && this.lastMessageTimestamp != 0) this.lastMessageTimestamp = thisroom.userMessageTimestamps[key].viewTimestamp;\n                                //populate array\n                                let timestamp = {id:key,viewTimestamp:thisroom.userMessageTimestamps[key].viewTimestamp}\n                                if (!this.userExist(room.userMessageTimestamps,timestamp.id)){\n                                    room.userMessageTimestamps.push(timestamp)\n                                }\n                            }\n                            this.pushOrUpdate(room)\n                        },error => {\n                            this.errorHandler.sendError(\"getChatrooms - getChatroomData subscription\",error);\n                            this.prefs.remove(globals.userPrefs,globals.userItem);\n                            let nav = this.app.getRootNav();\n                            nav.setRoot(\"ActivationPage\")\n                            loader.dismiss();\n                        })\n                })\n                loader.dismiss()\n            }, error => {\n                this.errorHandler.sendError(\"getChatrooms - getChatroomsByGroup subscription\",error);\n                this.prefs.remove(globals.userPrefs,globals.userItem);\n                let nav = this.app.getRootNav();\n                nav.setRoot(\"ActivationPage\")\n                loader.dismiss();\n            });\n    }\n\n    pushOrUpdate(room:ChatRoom){\n        let indexOfRoom = -1;\n        for (let i = 0; i < this.chatRooms.length; i++){\n            if (room.id === this.chatRooms[i].id) indexOfRoom = i;\n        }\n        if (indexOfRoom != -1) this.chatRooms[indexOfRoom] = room;\n        else this.chatRooms.push(room)\n    }\n\n    goToChatroom(chatroom:ChatRoom){\n        let activeNavs = this.app.getRootNavs()\n        activeNavs[0].push(\"ChatPage\",{chatroom:chatroom})\n    }\n\n    userExist(array:any,userId){\n        let exist = false;\n        for (let i = 0; i < array.length; i++){\n            if (array[i].id === userId) exist = true;\n        }\n        return exist\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/all/all.ts"],"sourceRoot":""}